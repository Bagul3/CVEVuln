using System.Collections.Generic;
using CVEVuln.Models;

namespace CVEVulnDA
{
    using System.Data.Entity;
    using System.Linq;
    using System.Threading.Tasks;

    public class VulnerabilityRepository : GenericRepository<CVE_VulnEntities, Vulnerabilities>
    {
        public async Task<List<Vulnerabilities>> SaveList(List<Vulnerabilities> vulnerabilitieses)
        {
            vulnerabilitieses.ForEach(this.Add);
            await this.Save();
            return vulnerabilitieses;
        }

        public void InsertVulnerabilities(List<Vulnerabilities> vulnerabilitieses)
        {
            foreach (var vulnerability in vulnerabilitieses)
            {
                this.UpdateIfRecordDoesNotExist(vulnerability);
            }

            this.Save().Wait();
        }

        public async Task<Vulnerabilities> GetVulnerability(int id)
        {
            return await this.FindBy(x => x.Id == id).FirstAsync();
        }

        private void UpdateIfRecordDoesNotExist(Vulnerabilities vulnerability)
        {
            if (this.FindBy(x => x.cve_id == vulnerability.cve_id).FirstOrDefault() != null)
            {
                return;
            }

            this.Add(vulnerability);
        }
    }
}
